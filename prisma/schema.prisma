generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  password  String
  questions Question[]
  answers   Answer[]
  comments  Comment[]
  vote      Vote[]
  createdAt DateTime   @default(now())
}

model Question {
  id        String    @id @default(uuid())
  title     String
  content   String
  slug      String    @unique
  authorId  String
  author    User      @relation(fields: [authorId], references: [id])
  answers   Answer[]
  comments  Comment[]
  vote      Vote[]
  tags      Tag[]     @relation("QuestionTags")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Answer {
  id         String    @id @default(uuid())
  content    String
  questionId String
  question   Question  @relation(fields: [questionId], references: [id])
  authorId   String
  author     User      @relation(fields: [authorId], references: [id])
  comments   Comment[]
  votes      Vote[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Comment {
  id       String @id @default(uuid())
  content  String
  authorId String
  author   User   @relation(fields: [authorId], references: [id])

  question   Question? @relation(fields: [questionId], references: [id])
  questionId String?

  answer   Answer? @relation(fields: [answerId], references: [id])
  answerId String?

  createdAt DateTime @default(now())
}

model Tag {
  id        String     @id @default(uuid())
  name      String     @unique
  questions Question[] @relation("QuestionTags")
}

model Vote {
  id     String   @id @default(uuid())
  type   VoteType
  userId String
  user   User     @relation(fields: [userId], references: [id])

  question   Question? @relation(fields: [questionId], references: [id])
  questionId String?

  answer   Answer? @relation(fields: [answerId], references: [id])
  answerId String?

  createdAt DateTime @default(now())

  @@unique([userId, questionId])
  @@unique([userId, answerId])
}

enum VoteType {
  UP
  DOWN
}
